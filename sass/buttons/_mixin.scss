// #############################
//  Button Mixins
// #############################

@mixin make-btn(
    $padding:       $default-btn-padding, 
    $border-radius: $default-btn-border-radius, 
    $font-size:     $default-btn-font-size){
        
    display: inline-block;
    font-size: $font-size;
    padding: $padding;
    margin: 5px;
        
    @include border-radius($border-radius);
    @include transition(all 0.4s ease 0s);
}

@mixin make-btn-sizes($font-size, $padding, $border-radius: 0) {
    @each $size, $multiplier in $btn-sizes {
        &.#{$size}{     
            if($border-radius > 0){
                border-radius: $border-radius;
            }
            font-size:  mul-property($font-size, $multiplier);
            padding:    mul-property($padding, $multiplier);
        }
    }
}

@mixin make-default-btn(){
    .btn {
        @include make-btn();
        @extend %#{$default-btn-theme}-btn;
    }
    
}

@mixin make-theme-btn($theme){
    .#{$theme} .btn, .#{$theme}.btn {
        @extend %#{$theme}-btn;
    }
}

@function btn-padding($padding, $multiplier: 1){
    @each $element in $padding {
        $element: strip-unit($element);
    }
    
    @if length($padding) == 1 {
        $padding: $padding * $multiplier;
    }
    @if length($padding) == 2 {
        $padding: nth($padding, 1) * $multiplier nth($padding, 2) * $multiplier;
    }
    @if length($padding) == 3 {
        $padding: nth($padding, 1) * $multiplier nth($padding, 2) * $multiplier nth($padding, 3) * $multiplier;
    }
    @if length($padding) == 4 {
        $padding: nth($padding, 1) * $multiplier nth($padding, 2) * $multiplier nth($padding, 3) * $multiplier nth($padding, 4) * $multiplier;
    }
    
    @each $element in $padding {
        $element: $element + px;
    }
    
    @return $padding;
}